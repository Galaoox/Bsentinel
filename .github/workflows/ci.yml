name: CI Pipeline

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: bsentinel_test
          POSTGRES_USER: bsentinel
          POSTGRES_PASSWORD: bsentinel
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Run linter (Ruff)
        run: |
          uv run ruff check .

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql+asyncpg://bsentinel:bsentinel@localhost:5432/bsentinel_test
          APP_ENVIRONMENT: local
        run: |
          uv run pytest tests/ --cov=bsentinel --cov-report=xml --cov-report=term

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t bsentinel:${{ github.sha }} --target base .

      - name: Test Docker image
        run: |
          docker run --rm bsentinel:${{ github.sha }} python -c "import bsentinel; print('OK')"
